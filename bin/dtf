#!/usr/bin/env ruby
# encoding: UTF-8
# (c) Copyright 2012 David Deryl Downey / Deryl R. Doucette. All Rights Reserved.
#
# This is the master script for managing Users and Verification Suites

require 'dtf'

# -- LOAD HELP SYSTEM
require 'dtf/dtf_help_system'

# -- LOAD ERROR SYSTEM
require 'dtf/dtf_error_system'


# -- START MAIN APPLICATION
# Ensure we have *all* required options for each possible sub_cmd
case @cmd
  when "create_user"
    if [:user_given, :name_given, :email_given].all? { |sym| @cmd_opts.key?(sym) } then
      @user = User.create(user_name: @cmd_opts[:user], full_name: @cmd_opts[:name], email_address: @cmd_opts[:email])

      # Check to make sure user was actually saved to the db
      if @user.persisted? then
        puts "Created user \'#{@cmd_opts[:user]}\' for \'#{@cmd_opts[:name]}\'"
      else
        # Oops, it wasn't! Notify user and display any error message(s)
        puts "ERROR: #{@cmd_opts[:user].to_s} was NOT created! Please fix the following errors and try again:"
        @user.errors.messages.keys.each do |key|
          puts "#{key.to_s.capitalize.gsub('_', ' ').to_s} #{@user.errors.messages[key][0].to_s}!"
        end
        # Now throw a proper error code to the system, while exiting the script
        exit 255
      end
    else
      raise_error # This error here is thrown when not all params are provided
    end
  when "delete_user"
    if [:user_given, :delete_all].all? { |sym| @cmd_opts.key?(sym) } then
      # NOTE: :delete_all is 'true' by default. passing '--no-delete-all' sets it to false,
      # and adds the :delete_all_given key to the @cmd_opts hash, set to true.
      # This means NOT to delete all VSs associated with this user. We delete them by default.
      if @cmd_opts[:delete_all] == false && @cmd_opts[:delete_all_given] == true
        puts "#{@cmd} called with '--no-delete-all' set! NOT deleting all owned VSs"
      else
        puts "#{@cmd} called with '--delete-all' set or on by default! Deleting all VSs owned by #{@cmd_opts[:user]}"
      end
    else
      raise_error
    end
  when "create_vs"
    if [:user_given, :name_given].all? { |sym| @cmd_opts.key?(sym) } then
      puts "Creating and associating VS named \'#{@cmd_opts[:name]}\' to user \'#{@cmd_opts[:user]}\'"
    else
      raise_error
    end
  when "delete_vs"
    if [:user_given, :id_given].all? { |sym| @cmd_opts.key?(sym) } then
      puts "#{@cmd} called! Deleting #{@cmd_opts[:user]}\'s VS with ID \'#{@cmd_opts[:id]}\'"
    else
      raise_error
    end
  end
